import React, { useEffect } from 'react';
import Head from 'next/head';
import styles from '../../styles/Home.module.css';
import Navbar from '../components/Navbar';
import { baseURL } from '../backend.config';
import {useRouter} from 'next/router';

import { useAuth } from '../context/AuthContext';


function Layout({children}: {children: React.ReactNode}) {
    const router = useRouter();
    const {auth, setUser, toggleAuth} = useAuth();
    useEffect(() => {
        let controller = new AbortController();
        (
         async () => {
           try {
            const token = await localStorage.getItem('accessToken')
            if (!token) {
                toggleAuth(false);
                if (!router.pathname.includes('signup') && !router.pathname.includes('signin') ) {
                    router.push('/signin')
                }
            }
            const authApiResponse = await fetch(`${baseURL}/api/sessions`, {
              headers: {
                'Authorization' : token
              }
            });
            const content = await authApiResponse.json();
            if (content && content?.valid) {
                toggleAuth(true);
                setUser(content)
              if (router.pathname.includes('signup') || router.pathname.includes('signin') ) {
                router.push('/')
              }
            } else {
                toggleAuth(false);
              if (!router.pathname.includes('signup') && !router.pathname.includes('signin') ) {
                router.push('/signin')
              }
            }
            controller = null;
           } catch (err) {
                toggleAuth(false);
              if (!router.pathname.includes('signup') && !router.pathname.includes('signin') ) {
                router.push('/signin')
              } else {
                  // router.push('/')
                  return err
              }  
           }
         }
        )();
        return () => controller?.abort();
      }, [auth])
    return (
        <>
            <Head>
                <title>Maltego Challenge</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar />
            <main className={styles.main}>
                {children}
            </main>
        </>
    )
}

export default Layout
